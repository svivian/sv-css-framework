/*-------------------------*\
	GRID
\*-------------------------*/

$grid-width: 1160;

.grid-wrapper, .colset, .col {
	@include box-sizing(border-box);
}

.grid-wrapper {
	width: 100%;
	max-width: $grid-width +px;
}

.colset {
	width: 100%;
	max-width: $grid-width +px;
	margin: 0 auto 20px;
	margin: 0 auto 2rem;
	padding: 0 10px;

	&.span-full {
		padding: 0 20px;
	}

	>:last-child {
		margin-bottom: 0;
	}

	&:after {
		content: "";
		display: table;
		clear: both;
	}
}

.col {
	float: left;
	padding: 0 10px;

	>:last-child {
		margin-bottom: 0;
	}
}

/* content pixel widths given for full size grid */
.span-1  { width:   8.33%; } /*   75px */
.span-2  { width:  16.67%; } /*  170px */
.span-3  { width:  25%;    } /*  265px */
.span-4  { width:  33.33%; } /*  360px */
.span-5  { width:  41.67%; } /*  455px */
.span-6  { width:  50%;    } /*  550px */
.span-7  { width:  58.33%; } /*  645px */
.span-8  { width:  66.67%; } /*  740px */
.span-9  { width:  75%;    } /*  835px */
.span-10 { width:  83.33%; } /*  930px */
.span-11 { width:  91.67%; } /* 1025px */
.span-12 { width: 100%;    } /* 1120px */

/*
	For responsive images we need to set `max-width` to keep them inside our grid, and we need auto
	 height to maintain the aspect ratio.
	However, auto height prevents the browser being able to allocate space for the image even with
	 their width and height explicitly defined in the HTML attributes and at full width.
	Therefore, we avoid setting `max-width` when the browser is above the grid's max width. The
	 exact pixel widths at full resolution are listed above.
*/
@media handheld, only screen and (max-width: $grid-width +px) {

	img, iframe {
		max-width: 100%;
		height: auto; /* maintain aspect ratio */
	}

}

@media handheld, only screen and (max-width: 767px) {

	.colset, .grid-wrapper {
		max-width: none;
		min-width: auto;
	}
	.col {
		width: auto;
		float: none;
	}

}
